services:
  rabbitmq:
    image: rabbitmq:3.9-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - app-tier
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app-tier
  service-a:
    build: ./service-A
    ports:
      - '3000:3000'
    environment:
      - RABBITMQ_HOST=rabbitmq
      - SERVICE_B_HOST=service-b
      - SERVICE_B_PORT=3000
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongo
    links:
      - rabbitmq
      - mongo
    networks:
      - app-tier
  service-b:
    build: ./service-B
    networks:
      - app-tier
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MONGODB_HOST=root:example@mongo
      - MONGODB_PORT=27017
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongo
    links:
      - rabbitmq
      - mongo

volumes:
  rabbitmq_data:
  rabbitmq_log:


networks:
  app-tier:
    driver: bridge
